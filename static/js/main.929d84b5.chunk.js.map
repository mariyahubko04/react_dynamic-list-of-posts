{"version":3,"sources":["components/User.js","components/Post.js","components/Comment.js","components/CommentList.js","components/PostList.js","api/getData.js","App.js","index.js"],"names":["User","_ref","userItem","react_default","a","createElement","className","user","name","email","address","street","suite","city","Post","postItem","title","body","Comment","comment","commentItem","CommentList","state","isLoadedComment","getShowComment","_this","setState","listItems","this","props","onClick","type","comments","map","item","components_Comment","React","Component","PostList","posts","getFilterPosts","onChange","placeholder","components_Post","components_User","components_CommentList","getPosts","Object","asyncToGenerator","regenerator_default","mark","_callee","response","wrap","_context","prev","next","fetch","sent","json","abrupt","stop","apply","arguments","getUsers","_ref2","_callee2","users","_context2","getComments","_ref3","_callee3","_context3","getArrFromPost","value","split","length","toLowerCase","startsWith","some","App","visiblePosts","isLoaded","isLoading","handleClick","listPostWithUser","post","objectSpread","find","userId","id","filter","postId","setTimeout","event","target","prevState","byTitle","byBodyPost","_this$state","components_PostList","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.929d84b5.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst User = ({ userItem }) => (\n  <div className=\"user-section\">\n    <span>\n      {userItem.user.name}\n    </span>\n    <span>\n      |\n      {userItem.user.email}\n    </span>\n    <span>\n      |\n      {userItem.user.address.street}\n      ,\n    </span>\n    <span>\n      {userItem.user.address.suite}\n      ,\n    </span>\n    <span>\n      {userItem.user.address.city}\n    </span>\n  </div>\n);\n\nUser.propTypes = {\n  userItem: PropTypes.shape({\n    user: PropTypes.object,\n  }).isRequired,\n};\n\nexport default User;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Post = ({ postItem }) => (\n  <div className=\"post\">\n    <h2 className=\"title_post\">{postItem.title}</h2>\n    <p>{postItem.body}</p>\n  </div>\n);\n\nPost.propTypes = {\n  postItem: PropTypes.shape({\n    title: PropTypes.string,\n    body: PropTypes.string,\n  }).isRequired,\n};\n\nexport default Post;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Comment = ({ commentItem: comment }) => (\n  <div className=\"comment_box\">\n    <div>\n      <span className=\"comment_author\">{comment.name}</span>\n      <span>{comment.email}</span>\n    </div>\n    <p>{comment.body}</p>\n  </div>\n);\n\nComment.propTypes = {\n  commentItem: PropTypes.shape({\n    body: PropTypes.string,\n    name: PropTypes.string,\n    email: PropTypes.string,\n  }).isRequired,\n};\n\nexport default Comment;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Comment from './Comment';\n\nclass CommentList extends React.Component {\n  state = {\n    isLoadedComment: 1,\n  }\n\n  /* eslint-disable */\n  getShowComment = () => {\n    this.setState({\n      isLoadedComment: this.state.isLoadedComment * (-1),\n    });\n  }\n  /* eslint-enable */\n\n  render() {\n    const { listItems } = this.props;\n    const { isLoadedComment } = this.state;\n\n    return (\n      <div>\n        <button\n          onClick={this.getShowComment}\n          type=\"button\"\n          className=\"btn btn-outline-dark btn-sm\"\n        >\n          Comments\n        </button>\n        {isLoadedComment === 1\n          ? ([])\n          : (listItems.comments.map(item => <Comment commentItem={item} />))}\n      </div>\n    );\n  }\n}\n\nCommentList.propTypes = {\n  listItems: PropTypes.arrayOf(PropTypes.object).isRequired,\n};\n\nexport default CommentList;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport User from './User';\nimport Post from './Post';\nimport CommentList from './CommentList';\n\nconst PostList = ({ posts, getFilterPosts }) => (\n  <div>\n    <form>\n      <input\n        onChange={getFilterPosts}\n        className=\"input-filter_name\"\n        type=\"text\"\n        placeholder=\"Enter the search parameters\"\n      />\n    </form>\n    <ul className=\"post-field\">\n      {posts.map(item => (\n        <li className=\"post_section\">\n          <div className=\"user-post\">\n            <Post postItem={item} />\n            <User userItem={item} />\n          </div>\n          <p className=\"comment_tab\">\n            <CommentList listItems={item} />\n          </p>\n        </li>\n      ))}\n    </ul>\n  </div>\n);\n\nPostList.propTypes = {\n  posts: PropTypes.arrayOf(PropTypes.object).isRequired,\n  getFilterPosts: PropTypes.func.isRequired,\n};\n\nexport default PostList;\n","export const getPosts = async() => {\n  const url = 'https://jsonplaceholder.typicode.com/posts';\n\n  const response = await fetch(url);\n  const posts = await response.json();\n\n  return posts;\n};\n\nexport const getUsers = async() => {\n  const url = 'https://jsonplaceholder.typicode.com/users';\n\n  const response = await fetch(url);\n  const users = await response.json();\n\n  return users;\n};\n\nexport const getComments = async() => {\n  const url = `https://jsonplaceholder.typicode.com/comments`;\n\n  const response = await fetch(url);\n  const comments = await response.json();\n\n  return comments;\n};\n","import React from 'react';\nimport './App.css';\n\nimport PostList from './components/PostList';\n\nimport { getPosts, getUsers, getComments } from './api/getData';\n\nconst getArrFromPost = (name, value) => {\n  if (name) {\n    if (value.split(' ').length > 1) {\n      return name.toLowerCase().startsWith(value.toLowerCase());\n    }\n\n    const arrFromPost = name.toLowerCase().split(' ');\n\n    return arrFromPost.some(item => item.startsWith(value.toLowerCase()));\n  }\n\n  return false;\n};\n\nclass App extends React.Component {\n  state = {\n    posts: [],\n    visiblePosts: [],\n    isLoaded: false,\n    isLoading: false,\n  }\n\n  handleClick = async() => {\n    this.setState({\n      isLoading: true,\n    });\n\n    const posts = await getPosts();\n    const users = await getUsers();\n    const comments = await getComments();\n    const listPostWithUser = posts.map(post => ({\n      ...post,\n      user: users.find(user => post.userId === user.id),\n      comments: comments.filter(comment => comment.postId === post.id),\n    }));\n\n    setTimeout(() => {\n      this.setState({\n        posts: listPostWithUser,\n        visiblePosts: listPostWithUser,\n        isLoaded: true,\n        isLoading: false,\n      });\n    }, 0);\n  };\n\n  getFilterPosts = (event) => {\n    const { value } = event.target;\n\n    this.setState(prevState => ({\n      visiblePosts: prevState.posts.filter((post) => {\n        const byTitle = getArrFromPost(post.title, value);\n        const byBodyPost = getArrFromPost(post.body, value);\n\n        return byTitle || byBodyPost;\n      }),\n    }));\n  }\n\n  render() {\n    const { visiblePosts, isLoaded, isLoading } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1 className=\"main-headline\">Dynamic list of posts</h1>\n        <main>\n          {isLoaded ? (\n            <div>\n              <PostList\n                posts={visiblePosts}\n                getFilterPosts={this.getFilterPosts}\n              />\n            </div>\n          ) : (\n            <button\n              type=\"button\"\n              onClick={this.handleClick}\n              className=\"btn btn-primary btn-lg active\"\n            >\n              {isLoading ? 'Loading...' : 'Load'}\n            </button>\n          )}\n        </main>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}